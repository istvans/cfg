#!/bin/bash


#=================================== FUNC =====================================
function is_installed
{
    app=$1
    which $app
    return $?
}

function FATAL
{
    exit_code=$1
    shift
    echo "$@" >&2
    exit $exit_code
}

function force_home_links
{
     for file in $@; do
         ln -sf $CFG_DIR/$file $HOME/.
         if [ "$MALNA" = true ]; then
             sudo ln -sf $HOME/$file ~root/.
         fi
     done
}


#=================================== MAIN =====================================

if [ ! $(is_installed git) ]; then
    FATAL 1 "missing git? this script should have been git cloned!"
fi

CFG_DIR=$HOME/cfg
if [ ! -d $CFG_DIR ]; then
    if [[ "$(basename $PWD)" = "$CFG_DIR" ]]; then
        CFG_DIR=$PWD
    else
        FATAL 2 "Cannot find the $CFG_DIR directory!"
    fi
fi

. $CFG_DIR/argparse

echo "CFG_DIR:'$CFG_DIR'"

if [ "$MALNA" = true ]; then
    if [ ! $(is_installed expressvpn) ]; then
        express_vpn_installer="$(find $CFG_DIR -maxdepth 1 -name 'expressvpn*' -print -quit)"
        if [[ -z "$express_vpn_installer" ]]; then
            FATAL 3 "put an expressvpn installer into $CFG_DIR/ and try again"
        fi
        echo "ExpressVPN installer:'$express_vpn_installer'"
    fi
fi

BIN_DIR=$HOME/bin
if [ ! -d $BIN_DIR ]; then
    mkdir $BIN_DIR
    if [ ! $? ]; then
        FATAL 4 "Failed to create $BIN_DIR"
    fi
fi
echo "BIN_DIR:'$BIN_DIR'"

echo "let's start with making sure we have all the essential apps..."
if [ "$MALNA" = true ]; then
    sudo apt-get update
    sudo apt-get install cron htop man transmission-daemon vim
else
    if [ ! $(is_installed vim) ]; then
        FATAL 5 "vim is missing!"
    fi    
fi

printf "setup git... "
git config --global user.email "stevesiroki@gmail.com"
git config --global user.name "István Siroki"
git config --global core.editor "vim"
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
if [ "$MALNA" = true ]; then
    git config --global credential.helper 'cache --timeout=3600'
fi
echo done

printf "setup vim... "
TYPE_SCRIPT_SYNTAX="typescript-vim"
TYPE_SCRIPT_SYNTAX_DIR="$HOME/.vim/pack/typescript/start"
if [ ! -d $TYPE_SCRIPT_SYNTAX_DIR ]; then
    mkdir -p $TYPE_SCRIPT_SYNTAX_DIR
    git clone https://github.com/leafgarland/$TYPE_SCRIPT_SYNTAX.git $TYPE_SCRIPT_SYNTAX_DIR/$TYPE_SCRIPT_SYNTAX
fi
echo done
    
echo "setup locales..."
DEFAULT_LOCALE=/etc/default/locale
if [[ ! -f $DEFAULT_LOCALE || "$(tail -n1 /etc/default/locale | cut -f2 -d =)" != "$LANG" ]]; then
    sudo dpkg-reconfigure locales
    sudo update-locale
fi

printf "setup bash... "
. $CFG_DIR/.bash_envars
force_home_links .bash_profile .bashrc .bash_aliases .bash_envars .bash_functions .vimrc
echo done

if [ "$MALNA" = true ]; then
    BASH_GIT_PROMPT_DIR=$HOME/$BASH_GIT_PROMPT
    if [ ! -d $BASH_GIT_PROMPT_DIR ]; then
        git clone https://github.com/magicmonty/bash-git-prompt.git $BASH_GIT_PROMPT_DIR --depth=1
    fi


    DIGI_DIR=$HOME/digionline
    if [ ! -d $DIGI_DIR ]; then
        echo "setup digionline under $DIGI_DIR..."
        git clone https://github.com/istvans/digionline.git $DIGI_DIR
        $DIGI_DIR/osmc_installer.sh
    fi

    if [ ! $(is_installed expressvpn) ]; then
        echo "setup expressvpn..."
        sudo dpkg -i $express_vpn_installer
        expressvpn activate
        expressvpn autoconnect on
        expressvpn connect $VPN_SERVER
    fi
    expressvpn preferences

    printf "install VPN monitor... "
    ln -sf $CFG_DIR/monvpn $BIN_DIR/monvpn
    echo done

    echo "setup odrive..."
    if [ ! -d $ODRIVE_PATH ]; then
        mkdir -p $ODRIVE_PATH
    fi
    if [ ! -f $ODRIVE_AGENT ]; then
        wget https://dl.odrive.com/odriveagent-rpi -O - | tar -xz --directory=$ODRIVE_PATH
        if [ ! -f $ODRIVE_AGENT ]; then
            FATAL 6 "Failed to install '$ODRIVE_AGENT'"
        fi
    fi
    if [ ! -f $ODRIVE ]; then
        wget https://dl.odrive.com/odrive-py -O $ODRIVE
        if [ ! -f $ODRIVE ]; then
            FATAL 7 "Failed to install '$ODRIVE'"
        fi
    fi
    if [ ! -f $ODRIVE_AUTH_KEY_FILE ]; then
        touch $ODRIVE_AUTH_KEY_FILE
        chmod 600 $ODRIVE_AUTH_KEY_FILE
        read -p "please type in your secret odrive auth key: " auth_key
        echo "$auth_key" > $ODRIVE_AUTH_KEY_FILE
        chmod 400 $ODRIVE_AUTH_KEY_FILE
        . $CFG_DIR/.bash_envars  # to populate ODRIVE_AUTH_KEY from the new file
        if [ -z "$ODRIVE_AUTH_KEY" ]; then
            FATAL 8 "The odrive auth key is still empty... ¯\_(ツ)_/¯"
        fi
    fi
    ln -sf $CFG_DIR/odrive_common $BIN_DIR/odrive_common
    ln -sf $CFG_DIR/odrive_reboot $BIN_DIR/odrive_reboot
    ln -sf $CFG_DIR/odrive_sync $BIN_DIR/odrive_sync
    echo done

    OLD_CRON="/var/tmp/crontab.old"
    printf "saving old crontab to '$OLD_CRON'... "
    crontab -l > $OLD_CRON
    echo done

    printf "install crontab... "
    crontab $CFG_DIR/cron
    echo done

    echo "setup transmission..."
    sudo systemctl stop transmission-daemon
    echo "please configure the daemon"
    sleep 5
    sudo vim /etc/transmission-daemon/settings.json
    sudo usermod -a -G debian-transmission $USER
    sudo systemctl start transmission-daemon

    echo "setup samba..."
    sudo apt-get install smb-app-osmc # must be the last step, it exits at the end...
fi
